module ALU_2bit_tb;
    reg [1:0] A, B;
    reg [2:0] sel;
    wire [1:0] result;
    wire carry_out, borrow_out;

    ALU_2bit uut (
        .A(A),
        .B(B),
        .sel(sel),
        .result(result),
        .carry_out(carry_out),
        .borrow_out(borrow_out)
    );

    initial begin
        $monitor("A=%b B=%b sel=%b | result=%b carry_out=%b borrow_out=%b", 
                  A, B, sel, result, carry_out, borrow_out);

        A = 2'b01; B = 2'b01; sel = 3'b000; #10; // Addition
        A = 2'b10; B = 2'b01; sel = 3'b001; #10; // Subtraction
        A = 2'b11; B = 2'b01; sel = 3'b010; #10; // AND
        A = 2'b10; B = 2'b01; sel = 3'b011; #10; // OR
        A = 2'b10; B = 2'b01; sel = 3'b100; #10; // XOR

        $finish;
    end
endmodule
